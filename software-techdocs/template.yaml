apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: software-techdocs-template
  title: "Software TechDocs + Catalog (Add to existing repo)"
  description: "Tambahkan TechDocs (docs/, mkdocs.yml, catalog-info.yaml) ke repository yang sudah ada lewat Pull Request. Opsional: anotasi Kubernetes."
  tags: [techdocs, documentation, software]
spec:
  owner: group:platform
  type: documentation

  parameters:
    - title: Project Info
      required: [name, description, type, lifecycle]
      properties:
        name:
          title: Name
          type: string
          description: "Nama service / product (dipakai untuk componentId & kubernetes-id)."
          ui:field: EntityNamePicker
          ui:options:
            allowedKinds: [Component]
        description:
          title: Description
          type: string
          description: "Deskripsi singkat dokumentasi software."
        type:
          title: Component Type
          type: string
          default: service
          enum: [service, website, library, tool, documentation, other]
        lifecycle:
          title: Lifecycle
          type: string
          description: "Pilih lifecycle komponen."
          default: production
          enum: [develop, production]
        tags:
          title: Tags
          type: array
          items:
            type: string
          default: ["techdocs", "software"]

    - title: Catalog Metadata
      required: [owner]
      properties:
        owner:
          title: Owner
          type: string
          description: "Owner katalog (mis. user:alice atau group:platform)."
          ui:field: OwnerPicker
          ui:options:
            allowedKinds: [Group, User]
        system:
          title: System
          type: string
          description: "(Opsional) system Backstage."
        domain:
          title: Domain
          type: string
          description: "(Opsional) domain Backstage."

    - title: Deployment (Kubernetes)
      properties:
        deployKubernetes:
          title: "Apakah di-deploy di Kubernetes?"
          type: boolean
          default: false
        kubernetesNamespace:
          title: "Kubernetes Namespace"
          type: string
          description: "Isi jika deployKubernetes = true."
        kubernetesCluster:
          title: "Kubernetes Cluster (opsional)"
          type: string
          description: "Isi jika ingin anotasi cluster spesifik."

    - title: Repository (Existing)
      required: [repoUrl, repoSlug]
      properties:
        repoUrl:
          title: Repository Location (existing)
          type: string
          description: "Repo GitHub yang sudah ada (format: github.com?owner=<org>&repo=<repo>)."
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts: ["github.com"]
        repoSlug:
          title: GitHub Project Slug
          type: string
          description: "Format owner/repo (dipakai untuk annotation github.com/project-slug & PR)."
          examples: ["my-org/my-service"]
        baseBranch:
          title: Base Branch (PR target)
          type: string
          default: main
        prBranchName:
          title: Pull Request Branch
          type: string
          default: "add-techdocs-${{ parameters.name | lower | replace(' ', '-') }}"
        createDraftPR:
          title: Create PR as Draft?
          type: boolean
          default: true
        prTitle:
          title: Pull Request Title
          type: string
          default: "docs: add TechDocs skeleton"
        prBody:
          title: Pull Request Description
          type: string
          default: "Add TechDocs (docs/, mkdocs.yml, catalog-info.yaml) and optional Kubernetes annotations."

  steps:
    - id: fetchBase
      name: Fetch & Template skeleton
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - ".github/**"
          - "docs/stylesheets/**"
        values:
          # identifiers
          name: ${{ parameters.name }}
          componentId: ${{ parameters.name | lower | replace(' ', '-') }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          domain: ${{ parameters.domain }}
          lifecycle: ${{ parameters.lifecycle }}
          type: ${{ parameters.type }}
          tags: ${{ parameters.tags }}

          # repo / annotations
          repoSlug: ${{ parameters.repoSlug }}

          # kubernetes conditionals
          deployKubernetes: ${{ parameters.deployKubernetes }}
          kubernetesNamespace: ${{ parameters.kubernetesNamespace }}
          kubernetesCluster: ${{ parameters.kubernetesCluster }}

          # techdocs/mkdocs
          site_name: ${{ parameters.name }}

    - id: openPr
      name: Open Pull Request to existing repo
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: ${{ parameters.prBranchName }}
        title: ${{ parameters.prTitle }}
        description: ${{ parameters.prBody }}
        targetPath: "/"        # tempatkan skeleton di root repo (mkdocs.yml di root, docs/ di root)
        update: true           # jika file sudah ada, commit akan meng-update (review di PR)
        draft: ${{ parameters.createDraftPR }}

    # (Opsional) Auto-register setelah merge: sengaja tidak dilakukan di sini
    # karena file belum ada di base branch. Setelah PR di-merge,
    # tambahkan lokasi lewat UI atau pakai location.yaml yang menunjuk ke catalog-info.yaml di base branch.

  output:
    links:
      - title: Open Pull Request
        url: ${{ steps.openPr.output.pullRequestUrl }}
      - title: Repository
        url: ${{ steps.openPr.output.remoteUrl }}
    text:
      - title: "Next step"
        content: "Review & merge PR. Setelah merge, register catalog-info.yaml di Backstage jika belum terdaftar."
